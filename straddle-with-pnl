//@version=6
indicator("Straddle P&L", overlay=false)

base = syminfo.ticker

// Define option prices for all tickers using request.security (evaluate once per ticker)
amznCall = request.security("AMZN250822C225.0", "1", close)
amznPut  = request.security("AMZN250822P225.0", "1", close)

hoodCall = request.security("HOOD250822C111.0", "1", close)
hoodPut  = request.security("HOOD250822P111.0", "1", close)

nvdaCall = request.security("NVDA250822C180.0", "1", close)
nvdaPut  = request.security("NVDA250822P180.0", "1", close)

pltrCall = request.security("PLTR250822C185.0", "1", close)
pltrPut  = request.security("PLTR250822P185.0", "1", close)

// Use pre-evaluated variables only once via switch
callValue = switch base
    'AMZN' => amznCall
    'HOOD' => hoodCall
    'NVDA' => nvdaCall
    'PLTR' => pltrCall
    => na

putValue = switch base
    'AMZN' => amznPut
    'HOOD' => hoodPut
    'NVDA' => nvdaPut
    'PLTR' => pltrPut
    => na

callCost = switch base
    'AMZN' => 4.55
    'HOOD' => 5.75
    'NVDA' => 0.00
    'PLTR' => 0.00
    => na

putCost = switch base
    'AMZN' => 5.00
    'HOOD' => 6.00
    'NVDA' => 0.00
    'PLTR' => 0.00
    => na

contracts = switch base
    'AMZN' => 5
    'HOOD' => 5
    'NVDA' => 5
    'PLTR' => 5
    => na

// AMD is a special case since you disabled request.security() on the put
if base == 'AMD'
    callValue := request.security("AMD251017C180.0", "1", close)
    putValue := 20.70
    callCost := 16.85
    putCost := 15.30
    contracts := 1

// Final Calculations
straddleCost = (callCost + putCost) * contracts * 100
straddleValue = (callValue + putValue) * contracts * 100
netPnL = straddleValue - straddleCost

// Coloring
valueColor = netPnL > 0 ? color.teal : color.red

// Plot
plot(straddleCost, title="Straddle Cost ($)", color=color.blue, linewidth=2)
plot(straddleValue, title="Straddle Total Value ($)", color=valueColor, linewidth=2)

// Label
if barstate.islast
    label.new(bar_index, straddleValue, "Net P&L: $" + str.tostring(netPnL, "#.##"), style=label.style_label_up, color=valueColor, textcolor=color.white)
