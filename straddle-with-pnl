//@version=6
indicator("Straddle P&L", overlay=false)

// === Base Ticker Detection ===
base = syminfo.ticker

// === Option Price Data (via request.security) ===
amznCall = request.security("AMZN250822C225.0", "1", close)
amznPut  = request.security("AMZN250822P225.0", "1", close)

hoodCall = request.security("HOOD250822C111.0", "1", close)
hoodPut  = request.security("HOOD250822P111.0", "1", close)

nvdaCall = request.security("NVDA250815C180.0", "1", close)
nvdaPut  = request.security("NVDA250815P180.0", "1", close)

pltrCall = request.security("PLTR250822C185.0", "1", close)
pltrPut  = request.security("PLTR250822P185.0", "1", close)

// === Call / Put Value Selection ===
callValue = switch base
    'AMZN' => amznCall
    'HOOD' => hoodCall
    'NVDA' => nvdaCall
    'PLTR' => pltrCall
    => na

putValue = switch base
    'AMZN' => amznPut
    'HOOD' => hoodPut
    'NVDA' => nvdaPut
    'PLTR' => pltrPut
    => na

// === Assigned Costs ===
callCost = switch base
    'AMZN' => 4.55
    'HOOD' => 5.75
    'NVDA' => 3.50
    'PLTR' => 0.00
    => na

putCost = switch base
    'AMZN' => 5.00
    'HOOD' => 6.00
    'NVDA' => 4.15
    'PLTR' => 0.00
    => na

contracts = switch base
    'AMZN' => 5
    'HOOD' => 5
    'NVDA' => 5
    'PLTR' => 5
    => na

// === Special Case: AMD ===
if base == 'AMD'
    callValue := request.security("AMD251017C180.0", "1", close)
    putValue  := 20.70
    callCost  := 16.85
    putCost   := 15.30
    contracts := 1

// === Final Calculations ===
straddleCost  = (callCost + putCost) * contracts * 100
straddleValue = (callValue + putValue) * contracts * 100
netPnL        = (straddleValue - straddleCost)

// === Plot Only for Current Day ===
isPreviousDay = dayofmonth(time) == dayofmonth(timenow - 24 * 60 * 60 * 1000)
isCurrentDay = dayofmonth(time) == dayofmonth(timenow)
valueColor   = netPnL > 0 ? color.teal : color.red
plot = (isPreviousDay or isCurrentDay) and straddleCost > 0

// === Plotting ===
plot(plot  ? straddleCost  : na, title="Straddle Cost ($)",        color=color.blue, linewidth=2)
plot(plot ? straddleValue : na, title="Straddle Total Value ($)", color=valueColor, linewidth=2)

// === Last-Bar Label ===
if barstate.islast and plot
    label.new(bar_index, straddleCost, "Net $" + str.tostring(math.abs(netPnL), "#.##") + " | Call $" + str.tostring(callValue, "#.##") + " | Put $" + str.tostring(putValue, "#.##"), style=label.style_label_lower_left, color=valueColor, textcolor=color.white)
